/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project1;

/**
 *
 * @author ibrahimdavid
 */
import java.awt.*;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
public class users extends javax.swing.JFrame {
Connection conn=null;
ResultSet rs=null;
PreparedStatement pst=null;
    /**
     * Creates new form users
     */
    public users() {
        initComponents();
        
        String url = "jdbc:mysql://127.0.0.1:3306/watcherdb";
        String user = "root";
        String password = "";
        
    try {
        conn = DriverManager.getConnection(url,user,password);
    } catch (SQLException ex) {
        Logger.getLogger(HomePage.class.getName()).log(Level.SEVERE, null, ex);
    }
        //conn=db.java_db();
        Toolkit toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();
        setLocation(size.width/2 - getWidth()/2, 
        size.height/2 - getHeight()/2);
        Fillcombobox();
    }
private void Fillcombobox(){
        
        try {
            String sql ="select * from userlogin";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            
            while(rs.next()) {
                String name =rs.getString("Username");
                txt_combo.addItem(name);
            }
        }catch (Exception e){
            
            JOptionPane.showMessageDialog(null, e);  
        } finally {
            
            try{
                rs.close();
                pst.close();
                
            }catch (Exception e){
            
        }
        }
    
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        addBtn = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txt_password = new javax.swing.JTextField();
        txt_combo = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        txt_username = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        f_nameTxt = new javax.swing.JTextField();
        lbl_img = new javax.swing.JLabel();
        AddImageBtn = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        l_nameTxt = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        depTxt = new javax.swing.JTextField();
        deleteBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();
        logsBtn = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("logo1.png")));
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(0, 51, 102));

        addBtn.setBackground(new java.awt.Color(153, 204, 255));
        addBtn.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        addBtn.setForeground(new java.awt.Color(0, 0, 0));
        addBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project1/img/add.jpg"))); // NOI18N
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(153, 204, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Manage Users:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Comic Sans MS", 1, 18), new java.awt.Color(0, 0, 153))); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Select User:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, -1, -1));

        txt_password.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        txt_password.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(txt_password, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 710, 170, -1));

        txt_combo.setFont(new java.awt.Font("Comic Sans MS", 1, 13)); // NOI18N
        txt_combo.setMaximumSize(new java.awt.Dimension(36, 29));
        txt_combo.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                txt_comboPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        txt_combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_comboActionPerformed(evt);
            }
        });
        jPanel1.add(txt_combo, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 360, 170, -1));

        jLabel3.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Password:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 710, -1, -1));

        txt_username.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        txt_username.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(txt_username, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 640, 170, -1));

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Username:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 640, -1, -1));

        jLabel5.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("First Name:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 430, -1, -1));

        f_nameTxt.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        f_nameTxt.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(f_nameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 430, 170, -1));

        lbl_img.setBackground(new java.awt.Color(0, 0, 0));
        lbl_img.setForeground(new java.awt.Color(0, 0, 0));
        lbl_img.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jPanel1.add(lbl_img, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 34, 270, 240));

        AddImageBtn.setBackground(new java.awt.Color(0, 0, 153));
        AddImageBtn.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        AddImageBtn.setForeground(new java.awt.Color(0, 204, 51));
        AddImageBtn.setText("+Image");
        AddImageBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddImageBtnActionPerformed(evt);
            }
        });
        jPanel1.add(AddImageBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 290, -1, -1));

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 330, 193, 10));

        jLabel7.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Last Name:");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 500, -1, -1));

        l_nameTxt.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        l_nameTxt.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(l_nameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 500, 170, -1));

        jLabel8.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Department:");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 570, -1, -1));

        depTxt.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        depTxt.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(depTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 570, 170, -1));

        deleteBtn.setBackground(new java.awt.Color(153, 204, 255));
        deleteBtn.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        deleteBtn.setForeground(new java.awt.Color(0, 0, 0));
        deleteBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project1/img/deleteuser.jpg"))); // NOI18N
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        updateBtn.setBackground(new java.awt.Color(153, 204, 255));
        updateBtn.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        updateBtn.setForeground(new java.awt.Color(0, 0, 0));
        updateBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project1/img/update.jpg"))); // NOI18N
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        clearBtn.setBackground(new java.awt.Color(153, 204, 255));
        clearBtn.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        clearBtn.setForeground(new java.awt.Color(0, 0, 0));
        clearBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project1/img/clrimage.png"))); // NOI18N
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });

        logsBtn.setBackground(new java.awt.Color(0, 0, 0));
        logsBtn.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        logsBtn.setForeground(new java.awt.Color(153, 204, 255));
        logsBtn.setText("Logs");
        logsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logsBtnActionPerformed(evt);
            }
        });

        jLabel6.setBackground(new java.awt.Color(0, 0, 153));
        jLabel6.setForeground(new java.awt.Color(0, 0, 153));
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project1/img/nightSky.jpg"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 451, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(71, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(logsBtn)
                        .addGap(60, 60, 60))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(clearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(126, 126, 126)
                        .addComponent(logsBtn)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 759, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // Delete User record:
            deleteRecord();
            
        //Update change logs when User record is updated:  
            changelogsDELETE();
        

    }//GEN-LAST:event_deleteBtnActionPerformed

    private void txt_comboPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_txt_comboPopupMenuWillBecomeInvisible
        
         String tmp =(String) txt_combo.getSelectedItem();
         String sql="select * from userlogin where Username=?";
        
        
        try{
            pst=conn.prepareStatement(sql);
            pst.setString(1, tmp);
            rs=pst.executeQuery();
            
            if(rs.next()){
                
                String add1 =rs.getString("Username");
                txt_username.setText(add1);
                
                String add2 =rs.getString("Password");
                txt_password.setText(add2);
                
                String add3 = rs.getString("Firstname");
                f_nameTxt.setText(add3);
                
                String add4 = rs.getString("Lastname");
                l_nameTxt.setText(add4);
                
                String add5 =rs.getString("Department");
                depTxt.setText(add5);
                
                byte[] img = rs.getBytes("Photo");
                
                ImageIcon imageIcon = new ImageIcon(new ImageIcon(img).getImage().getScaledInstance(lbl_img.getWidth(), 
                    lbl_img.getHeight(), Image.SCALE_SMOOTH));
                
                lbl_img.setIcon(imageIcon);
               
            }
            
        }catch (Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        finally {
            
            try{
                rs.close();
                pst.close();
                
            }
            catch(Exception e){
                
            }
        }// TODO add your handling code here:
        
       
    }//GEN-LAST:event_txt_comboPopupMenuWillBecomeInvisible

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        //Update User record in the database:
        updateRecord();
        
        //Update change logs when User record is updated:
        changelogsUPDATE();
    }//GEN-LAST:event_updateBtnActionPerformed

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        // TODO add your handling code here:
        txt_username.setText("");
        txt_password.setText("");
        f_nameTxt.setText("");
        l_nameTxt.setText("");
        depTxt.setText("");
        lbl_img.setIcon(null);
            
    }//GEN-LAST:event_clearBtnActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed

        save();
        changelogsADD();
        Fillcombobox();
    }//GEN-LAST:event_addBtnActionPerformed

    private void logsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logsBtnActionPerformed
        // TODO add your handling code here:
        Change_logs cl = new Change_logs();
        cl.setVisible(true);
    }//GEN-LAST:event_logsBtnActionPerformed

    private void AddImageBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddImageBtnActionPerformed
        // TO add image to the View:
                JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        
        filename = f.getAbsolutePath();
        
        ImageIcon imageIcon = new ImageIcon(new ImageIcon(filename).getImage()
                .getScaledInstance(lbl_img.getWidth(), lbl_img.getHeight(), Image.SCALE_DEFAULT));
        lbl_img.setIcon(imageIcon);
      try {

            File image = new File(filename);
            FileInputStream fis = new FileInputStream (image);
            ByteArrayOutputStream bos= new ByteArrayOutputStream();
            byte[] buf = new byte[1024];

            for(int readNum; (readNum=fis.read(buf))!=-1; ){

                bos.write(buf,0,readNum);
            }
            person_image=bos.toByteArray();
        }

        catch(Exception e){
            JOptionPane.showMessageDialog(null,e);

        }
    }//GEN-LAST:event_AddImageBtnActionPerformed

    private void txt_comboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_comboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_comboActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(users.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(users.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(users.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(users.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new users().setVisible(true);
            }
        });
    }

    /////////////////////////////////////////////////////////////////////////////////////////////////
    
    private ImageIcon format =null;
    //string filename
    String filename = null;
    
    int s = 0;
    byte[] person_image = null;
    
    ////////////////////////////////////////////////////////////////////////////////////////////////
    
       public void save(){
        String firstname = f_nameTxt.getText();
        String lastname = l_nameTxt.getText();
        
        
        String department = depTxt.getText();
        
        String username = txt_username.getText();
        String u_password = txt_password.getText();
       
        
       String url = "jdbc:mysql://127.0.0.1:3306/watcherdb";
       String user = "root";
       String password = "2012Apocalypse.";
       
       Connection con =null;
       PreparedStatement pstmt = null;
    
    int p = JOptionPane.showConfirmDialog(null, "Are you sure you want to add User?","Add User",JOptionPane.YES_NO_OPTION);
        if(p==0){
       
       try{
           con = DriverManager.getConnection(url,user,password);
           
           String sql = "insert into userlogin(Firstname, Lastname, Department, Photo, Username, Password) values (?, ?, ?, ?, ?, ?)";
           pstmt = con.prepareStatement(sql);
           
           pstmt.setString(1, firstname);
           pstmt.setString(2, lastname);
           pstmt.setString(3, department);
           pstmt.setBytes(4, person_image);
           pstmt.setString(5, username);
           pstmt.setString(6, u_password);
           
          
           int i = pstmt.executeUpdate();
           if(i>0){
               JOptionPane.showMessageDialog(this, firstname + "'s" + " data has been saved Successfully.");
           }
           else{
               JOptionPane.showMessageDialog(this, "Unsuccessful. Try Again!");
           }    
           
            
            
           
       } catch (SQLException ex) {
           // Logger.getLogger(RegistrationForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
       
    }
 ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
       
       public void updateRecord(){
       
                   // To update User record in the database:
        int p = JOptionPane.showConfirmDialog(null, "Are you sure you want to update record?","Update Record",JOptionPane.YES_NO_OPTION);
        if(p==0){
         try{
            
            //String value1 = txt_id.getText();
            String value2 = txt_username.getText();
            String value3 = txt_password.getText();
            String value4 = depTxt.getText();
            String value5 = f_nameTxt.getText();
            String value6 = l_nameTxt.getText();
            
            
            String sql= "update userlogin set Username='"+value2+"', Password='"+value3+"', Department='"+value4+"', Firstname='"+value5+"', "
                    + "Lastname='"+value6+"', Photo='"+person_image+"' where Username='"+value2+"' ";
            
            pst=conn.prepareStatement(sql);
            pst.execute();
            JOptionPane.showMessageDialog(null, "Record Updated");
            
        }catch(Exception e){
       JOptionPane.showMessageDialog(null, e);
        }
        finally {
            
            try{
                rs.close();
                pst.close();
                
            }
            catch(Exception e){
                
            }
        }
        }
        Fillcombobox();
       
       
       
       }
       
 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
       
   public void deleteRecord(){
       
       int p = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete record?","Delete",JOptionPane.YES_NO_OPTION);
        if(p==0){
         String sql ="delete from userlogin where Username=? ";
        try{
            pst=conn.prepareStatement(sql);
            pst.setString(1, txt_username.getText());
            pst.execute();
            JOptionPane.showMessageDialog(null,"Record Deleted");
            
            
        }catch(Exception e){
            
            JOptionPane.showMessageDialog(null, e);
        }finally {
            
            try{
                rs.close();
                pst.close();
                
            }
            catch(Exception e){
                
            }
        }
        
        }
       Fillcombobox();

   }
       
 /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
       
       public void changelogsADD(){

       Date currentDate = GregorianCalendar.getInstance().getTime();
            DateFormat df = DateFormat.getDateInstance();
            String dateString = df.format(currentDate);

            Date d = new Date();
            SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss");
            String timeString = sdf.format(d);
            
            String username = txt_username.getText();

            String value0 = timeString;
            String value1 = dateString;
            
            String date = value1 + value0;
            
            String val = "Super Admin";
            String status = "Added " +  username;
            
                try{

                String reg= "insert into changelogs (User, Date, Action) values (?,?,?)";
                pst=conn.prepareStatement(reg);
                
                pst.setString(1, val);
                pst.setString(2, date);
                pst.setString(3, status);
                
                
               pst.executeUpdate();
               

                  }
            catch (Exception e)

            {
                JOptionPane.showMessageDialog(null,e);
            }
             finally {

                try{
                    rs.close();
                    pst.close();

                }  
                
                catch(Exception e){
                   JOptionPane.showMessageDialog(null,e);
                
            }
         }

} 
  ///////////////////////////////////////////////////////////////////////////////////////////////////////     
      public void changelogsUPDATE(){

       Date currentDate = GregorianCalendar.getInstance().getTime();
            DateFormat df = DateFormat.getDateInstance();
            String dateString = df.format(currentDate);

            Date d = new Date();
            SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss");
            String timeString = sdf.format(d);
            
            String username = txt_username.getText();

            String value0 = timeString;
            String value1 = dateString;
            
            String date = value1 + value0;
            
            String val = "Super Admin";
            String status = "Updated " +  username;
            
                try{

                String reg= "insert into changelogs (User, Date, Action) values (?,?,?)";
                pst=conn.prepareStatement(reg);
                
                pst.setString(1, val);
                pst.setString(2, date);
                pst.setString(3, status);
                
                
               pst.executeUpdate();
               

                  }
            catch (Exception e)

            {
                JOptionPane.showMessageDialog(null,e);
            }
             finally {

                try{
                    rs.close();
                    pst.close();

                }  
                
                catch(Exception e){
                   JOptionPane.showMessageDialog(null,e);
                
            }
         }

}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////
   public void changelogsDELETE(){
   
      Date currentDate = GregorianCalendar.getInstance().getTime();
            DateFormat df = DateFormat.getDateInstance();
            String dateString = df.format(currentDate);

            Date d = new Date();
            SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss");
            String timeString = sdf.format(d);
            
            String username = txt_username.getText();

            String value0 = timeString;
            String value1 = dateString;
            
            String date = value1 + value0;
            
            String val = "Super Admin";
            String status = "Deleted " +  username;
            
                try{

                String reg= "insert into changelogs (User, Date, Action) values (?,?,?)";
                pst=conn.prepareStatement(reg);
                
                pst.setString(1, val);
                pst.setString(2, date);
                pst.setString(3, status);
                
                
               pst.executeUpdate();
               

                  }
            catch (Exception e)

            {
                JOptionPane.showMessageDialog(null,e);
            }
             finally {

                try{
                    rs.close();
                    pst.close();

                }  
                
                catch(Exception e){
                   JOptionPane.showMessageDialog(null,e);
                
            }
         }
   
   }   
      
      
/////////////////////////////////////////////////////////////////////////////////////////////////////////////      
       
       
       
       
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddImageBtn;
    private javax.swing.JButton addBtn;
    private javax.swing.JButton clearBtn;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JTextField depTxt;
    private javax.swing.JTextField f_nameTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField l_nameTxt;
    private javax.swing.JLabel lbl_img;
    private javax.swing.JButton logsBtn;
    private javax.swing.JComboBox txt_combo;
    private javax.swing.JTextField txt_password;
    private javax.swing.JTextField txt_username;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables

}
